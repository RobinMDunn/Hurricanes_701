% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convex_hull.R
\name{points_in_spatial_polygon}
\alias{points_in_spatial_polygon}
\title{Identification of points inside a spatial polygon}
\usage{
points_in_spatial_polygon(spPoly, predict_mat, position = 1:2)
}
\arguments{
\item{spPoly}{polygon object.}

\item{predict_mat}{matrix with the points to be determined in terms of 
position with respect to the contour.}

\item{position}{Columns position of long/lat pair. Default is 1:2}
}
\value{
Vector of boolean values, if the point is inside the polygon, 
Dimensionality is the same as the number of rows in predict_mat
}
\description{
This function calculates whether a series of points are inside a given
polygon or not
}
\details{
To account for computer storage of values generating rounding errors
this approach adds noise of \code{50 * .Machine$double.eps} in \emph{x} and 
\emph{y} directions and the point counts as interior if any of these jitters 
or the real point follow inside the polygon.
}
\examples{
\dontrun{
set.seed(8192)

x1 <- 2^rnorm(100)
y1 <- rnorm(100)
dfmat <- cbind(x1,y1)
kde_object <- ks::kde(dfmat)
cont <- with(kde_object, contourLines(x = eval.points[[1]],
                                      y = eval.points[[2]],
                                      z = estimate,levels = cont["5\%"])[[1]])

poly <- with(cont, data.frame(x,y))
poly <- rbind(poly, poly[1, ])    # polygon needs to be closed
spPoly <- sp::SpatialPolygons(list(sp::Polygons(list(sp::Polygon(poly)),ID = 1)))

x1 <- 2^rnorm(100)
y1 <- rnorm(100)
predict_mat <- cbind(x1,y1)

position_wrt_contour <- points_in_spatial_polygon(spPoly, predict_mat)
}
}
\references{
Inside this function we use \code{sp}'s \code{point.in.polygon}
with uses the C function InPoly(). InPoly is Copyright (c) 1998 by 
Joseph O'Rourke. It may be freely redistributed in its entirety provided 
that this copyright notice is not removed.
}
